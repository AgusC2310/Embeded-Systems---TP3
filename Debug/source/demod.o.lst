   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"demod.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../source/demod.c"
  20              		.section	.rodata.coefs,"a"
  21              		.align	2
  24              	coefs:
  25 0000 F4C508BB 		.word	-1157052940
  26 0004 45B5C4BB 		.word	-1144736443
  27 0008 24720DBC 		.word	-1139969500
  28 000c E0A6EABA 		.word	-1159026976
  29 0010 7398C93C 		.word	1019844723
  30 0014 E9009B3D 		.word	1033568489
  31 0018 F34C143E 		.word	1041517811
  32 001c 6AE0593E 		.word	1046077546
  33 0020 10A9823E 		.word	1048750352
  34 0024 10A9823E 		.word	1048750352
  35 0028 6AE0593E 		.word	1046077546
  36 002c F34C143E 		.word	1041517811
  37 0030 E9009B3D 		.word	1033568489
  38 0034 7398C93C 		.word	1019844723
  39 0038 E0A6EABA 		.word	-1159026976
  40 003c 24720DBC 		.word	-1139969500
  41 0040 45B5C4BB 		.word	-1144736443
  42 0044 F4C508BB 		.word	-1157052940
  43              		.section	.bss.raw_inputs,"aw",%nobits
  44              		.align	2
  47              	raw_inputs:
  48 0000 00000000 		.space	24
  48      00000000 
  48      00000000 
  48      00000000 
  48      00000000 
  49              		.section	.bss.write_index_raw,"aw",%nobits
  52              	write_index_raw:
  53 0000 00       		.space	1
  54              		.section	.bss.inputs,"aw",%nobits
  55              		.align	2
  58              	inputs:
  59 0000 00000000 		.space	400
  59      00000000 
  59      00000000 
  59      00000000 
  59      00000000 
  60              		.section	.bss.demod_bitstream,"aw",%nobits
  61              		.align	2
  64              	demod_bitstream:
  65 0000 00000000 		.space	4
  66              		.section	.bss.write_index,"aw",%nobits
  69              	write_index:
  70 0000 00       		.space	1
  71              		.section	.bss.read_index,"aw",%nobits
  74              	read_index:
  75 0000 00       		.space	1
  76              		.section	.bss.demod_write_index,"aw",%nobits
  77              		.align	1
  80              	demod_write_index:
  81 0000 0000     		.space	2
  82              		.section	.bss.current_state,"aw",%nobits
  85              	current_state:
  86 0000 00       		.space	1
  87              		.section	.bss.unfiltered_data_count,"aw",%nobits
  88              		.align	1
  91              	unfiltered_data_count:
  92 0000 0000     		.space	2
  93              		.section	.bss.idle,"aw",%nobits
  96              	idle:
  97 0000 00       		.space	1
  98              		.section	.text.demod_init,"ax",%progbits
  99              		.align	1
 100              		.global	demod_init
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	demod_init:
 106              	.LFB123:
   1:../source/demod.c **** #include "demod.h"
   2:../source/demod.c **** #include "ADC.h"
   3:../source/demod.c **** #include <stdint.h>
   4:../source/demod.c **** #include <stdbool.h>
   5:../source/demod.c **** 
   6:../source/demod.c **** void add_data(uint16_t new_data);
   7:../source/demod.c **** 
   8:../source/demod.c **** static const float coefs[FILTER_SIZE] = {
   9:../source/demod.c **** 		 -0.002086994263159,-0.006003054525357,-0.008633170414909,-0.001790251586214,
  10:../source/demod.c **** 		    0.02460882704212,   0.0756853298976,   0.1448247875714,   0.2127701317527,
  11:../source/demod.c **** 		     0.2551960820215,   0.2551960820215,   0.2127701317527,   0.1448247875714,
  12:../source/demod.c **** 		     0.0756853298976,  0.02460882704212,-0.001790251586214,-0.008633170414909,
  13:../source/demod.c **** 		  -0.006003054525357,-0.002086994263159
  14:../source/demod.c **** 		};
  15:../source/demod.c **** 
  16:../source/demod.c **** static float raw_inputs[MULT_BUFF_SIZE];
  17:../source/demod.c **** static uint8_t write_index_raw;
  18:../source/demod.c **** 
  19:../source/demod.c **** 
  20:../source/demod.c **** 
  21:../source/demod.c **** static float inputs[BUFFER_SIZE];
  22:../source/demod.c **** static uint8_t* demod_bitstream;
  23:../source/demod.c **** 
  24:../source/demod.c **** static uint8_t write_index;
  25:../source/demod.c **** static uint8_t read_index;
  26:../source/demod.c **** 
  27:../source/demod.c **** static uint16_t demod_write_index;		//
  28:../source/demod.c **** 
  29:../source/demod.c **** 
  30:../source/demod.c **** static uint8_t current_state;			//State of the hysteresis trigger
  31:../source/demod.c **** static uint16_t unfiltered_data_count;	//number of data samples that were not filtered
  32:../source/demod.c **** 
  33:../source/demod.c **** static bool idle;	//idle state. 1 if no transmission is occurring at the moment. 0 otherwise.
  34:../source/demod.c **** 
  35:../source/demod.c **** 
  36:../source/demod.c **** void demod_init( uint8_t* demod_bitstream_ptr){
 107              		.loc 1 36 47
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 82B0     		sub	sp, sp, #8
 116              		.cfi_def_cfa_offset 16
 117 0004 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
  37:../source/demod.c **** 	setADCIRQ(add_data);
 120              		.loc 1 37 2
 121 0008 0448     		ldr	r0, .L2
 122 000a FFF7FEFF 		bl	setADCIRQ
  38:../source/demod.c **** 	demod_bitstream = demod_bitstream_ptr;
 123              		.loc 1 38 18
 124 000e 044A     		ldr	r2, .L2+4
 125 0010 7B68     		ldr	r3, [r7, #4]
 126 0012 1360     		str	r3, [r2]
  39:../source/demod.c **** }
 127              		.loc 1 39 1
 128 0014 00BF     		nop
 129 0016 0837     		adds	r7, r7, #8
 130              		.cfi_def_cfa_offset 8
 131 0018 BD46     		mov	sp, r7
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 001a 80BD     		pop	{r7, pc}
 135              	.L3:
 136              		.align	2
 137              	.L2:
 138 001c 00000000 		.word	add_data
 139 0020 00000000 		.word	demod_bitstream
 140              		.cfi_endproc
 141              	.LFE123:
 143              		.section	.text.filter_data,"ax",%progbits
 144              		.align	1
 145              		.global	filter_data
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	filter_data:
 151              	.LFB124:
  40:../source/demod.c **** 
  41:../source/demod.c **** uint8_t filter_data (void){
 152              		.loc 1 41 27
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 16
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 80B4     		push	{r7}
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 7, -4
 160 0002 85B0     		sub	sp, sp, #20
 161              		.cfi_def_cfa_offset 24
 162 0004 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
  42:../source/demod.c **** #ifdef DEBUG_PIN
  43:../source/demod.c **** 	DEBUG_TP_SET;
 164              		.loc 1 43 2
 165 0006 534B     		ldr	r3, .L25
 166 0008 4FF40002 		mov	r2, #8388608
 167 000c 1A60     		str	r2, [r3]
  44:../source/demod.c **** 	//GPIO_Set(PTC, GPIO_OUT(12));
  45:../source/demod.c **** #endif
  46:../source/demod.c **** 	int i,j;
  47:../source/demod.c **** 	uint8_t num_data=0;			//number of data samples filtered
 168              		.loc 1 47 10
 169 000e 0023     		movs	r3, #0
 170 0010 FB71     		strb	r3, [r7, #7]
  48:../source/demod.c **** 	float filtered_data=0;
 171              		.loc 1 48 8
 172 0012 4FF00003 		mov	r3, #0
 173 0016 3B60     		str	r3, [r7]	@ float
  49:../source/demod.c **** 	if(write_index >= read_index){
 174              		.loc 1 49 17
 175 0018 4F4B     		ldr	r3, .L25+4
 176 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 177 001c 4F4B     		ldr	r3, .L25+8
 178 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 179              		.loc 1 49 4
 180 0020 9A42     		cmp	r2, r3
 181 0022 06D3     		bcc	.L5
  50:../source/demod.c **** 		num_data= write_index-read_index;
 182              		.loc 1 50 24
 183 0024 4C4B     		ldr	r3, .L25+4
 184 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 185 0028 4C4B     		ldr	r3, .L25+8
 186 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 187              		.loc 1 50 11
 188 002c D31A     		subs	r3, r2, r3
 189 002e FB71     		strb	r3, [r7, #7]
 190 0030 07E0     		b	.L6
 191              	.L5:
  51:../source/demod.c **** 	}
  52:../source/demod.c **** 	else{
  53:../source/demod.c **** 		num_data= write_index - read_index + (BUFFER_SIZE);
 192              		.loc 1 53 25
 193 0032 494B     		ldr	r3, .L25+4
 194 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 195 0036 494B     		ldr	r3, .L25+8
 196 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197 003a D31A     		subs	r3, r2, r3
 198 003c DBB2     		uxtb	r3, r3
 199              		.loc 1 53 11
 200 003e 6433     		adds	r3, r3, #100
 201 0040 FB71     		strb	r3, [r7, #7]
 202              	.L6:
  54:../source/demod.c **** 	}
  55:../source/demod.c **** 	for(j=0; j<num_data; j++)
 203              		.loc 1 55 7
 204 0042 0023     		movs	r3, #0
 205 0044 BB60     		str	r3, [r7, #8]
 206              		.loc 1 55 2
 207 0046 75E0     		b	.L7
 208              	.L20:
  56:../source/demod.c **** 	{
  57:../source/demod.c **** 		for(i=0; i<FILTER_SIZE; i++){
 209              		.loc 1 57 8
 210 0048 0023     		movs	r3, #0
 211 004a FB60     		str	r3, [r7, #12]
 212              		.loc 1 57 3
 213 004c 28E0     		b	.L8
 214              	.L11:
  58:../source/demod.c **** 			filtered_data += inputs[CIRCULAR_INDEX_R(read_index - i, BUFFER_SIZE)] * coefs[i];
 215              		.loc 1 58 28
 216 004e 434B     		ldr	r3, .L25+8
 217 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0052 1A46     		mov	r2, r3
 219 0054 FB68     		ldr	r3, [r7, #12]
 220 0056 D31A     		subs	r3, r2, r3
 221 0058 002B     		cmp	r3, #0
 222 005a 06DA     		bge	.L9
 223              		.loc 1 58 28 is_stmt 0 discriminator 1
 224 005c 3F4B     		ldr	r3, .L25+8
 225 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 0060 1A46     		mov	r2, r3
 227 0062 FB68     		ldr	r3, [r7, #12]
 228 0064 D31A     		subs	r3, r2, r3
 229 0066 6433     		adds	r3, r3, #100
 230 0068 04E0     		b	.L10
 231              	.L9:
 232              		.loc 1 58 28 discriminator 2
 233 006a 3C4B     		ldr	r3, .L25+8
 234 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235 006e 1A46     		mov	r2, r3
 236 0070 FB68     		ldr	r3, [r7, #12]
 237 0072 D31A     		subs	r3, r2, r3
 238              	.L10:
 239              		.loc 1 58 27 is_stmt 1 discriminator 4
 240 0074 3A4A     		ldr	r2, .L25+12
 241 0076 9B00     		lsls	r3, r3, #2
 242 0078 1344     		add	r3, r3, r2
 243 007a 93ED007A 		vldr.32	s14, [r3]
 244              		.loc 1 58 82 discriminator 4
 245 007e 394A     		ldr	r2, .L25+16
 246 0080 FB68     		ldr	r3, [r7, #12]
 247 0082 9B00     		lsls	r3, r3, #2
 248 0084 1344     		add	r3, r3, r2
 249 0086 D3ED007A 		vldr.32	s15, [r3]
 250              		.loc 1 58 75 discriminator 4
 251 008a 67EE277A 		vmul.f32	s15, s14, s15
 252              		.loc 1 58 18 discriminator 4
 253 008e 97ED007A 		vldr.32	s14, [r7]
 254 0092 77EE277A 		vadd.f32	s15, s14, s15
 255 0096 C7ED007A 		vstr.32	s15, [r7]
  57:../source/demod.c **** 			filtered_data += inputs[CIRCULAR_INDEX_R(read_index - i, BUFFER_SIZE)] * coefs[i];
 256              		.loc 1 57 28 discriminator 2
 257 009a FB68     		ldr	r3, [r7, #12]
 258 009c 0133     		adds	r3, r3, #1
 259 009e FB60     		str	r3, [r7, #12]
 260              	.L8:
  57:../source/demod.c **** 			filtered_data += inputs[CIRCULAR_INDEX_R(read_index - i, BUFFER_SIZE)] * coefs[i];
 261              		.loc 1 57 13 discriminator 1
 262 00a0 FB68     		ldr	r3, [r7, #12]
 263 00a2 112B     		cmp	r3, #17
 264 00a4 D3DD     		ble	.L11
  59:../source/demod.c **** 		}
  60:../source/demod.c **** 		read_index = UPDATE_INDEX(read_index,BUFFER_SIZE);
 265              		.loc 1 60 16
 266 00a6 2D4B     		ldr	r3, .L25+8
 267 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268              		.loc 1 60 14
 269 00aa 632B     		cmp	r3, #99
 270 00ac 04D0     		beq	.L12
 271              		.loc 1 60 16 discriminator 1
 272 00ae 2B4B     		ldr	r3, .L25+8
 273 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274              		.loc 1 60 14 discriminator 1
 275 00b2 0133     		adds	r3, r3, #1
 276 00b4 DBB2     		uxtb	r3, r3
 277 00b6 00E0     		b	.L13
 278              	.L12:
 279              		.loc 1 60 14 is_stmt 0 discriminator 2
 280 00b8 0023     		movs	r3, #0
 281              	.L13:
 282              		.loc 1 60 14 discriminator 4
 283 00ba 284A     		ldr	r2, .L25+8
 284 00bc 1370     		strb	r3, [r2]
  61:../source/demod.c **** 
  62:../source/demod.c **** 		if(filtered_data > V_TH){
 285              		.loc 1 62 5 is_stmt 1
 286 00be D7ED007A 		vldr.32	s15, [r7]
 287 00c2 9FED297A 		vldr.32	s14, .L25+20
 288 00c6 F4EEC77A 		vcmpe.f32	s15, s14
 289 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 290 00ce 03DD     		ble	.L24
  63:../source/demod.c **** 				current_state = 0;	// Set to 0 when amplitude is greater than V_th
 291              		.loc 1 63 19
 292 00d0 264B     		ldr	r3, .L25+24
 293 00d2 0022     		movs	r2, #0
 294 00d4 1A70     		strb	r2, [r3]
 295 00d6 0BE0     		b	.L16
 296              	.L24:
  64:../source/demod.c **** 		}
  65:../source/demod.c **** 		else if( filtered_data < V_TL){
 297              		.loc 1 65 10
 298 00d8 D7ED007A 		vldr.32	s15, [r7]
 299 00dc 9FED247A 		vldr.32	s14, .L25+28
 300 00e0 F4EEC77A 		vcmpe.f32	s15, s14
 301 00e4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 302 00e8 02D5     		bpl	.L16
  66:../source/demod.c **** 				current_state = 1;	//Set to 1 when amplitude is less than V_tl
 303              		.loc 1 66 19
 304 00ea 204B     		ldr	r3, .L25+24
 305 00ec 0122     		movs	r2, #1
 306 00ee 1A70     		strb	r2, [r3]
 307              	.L16:
  67:../source/demod.c **** 		}
  68:../source/demod.c **** 
  69:../source/demod.c **** 		demod_bitstream[demod_write_index]= current_state;
 308              		.loc 1 69 18
 309 00f0 204B     		ldr	r3, .L25+32
 310 00f2 1B68     		ldr	r3, [r3]
 311 00f4 204A     		ldr	r2, .L25+36
 312 00f6 1288     		ldrh	r2, [r2]
 313 00f8 1344     		add	r3, r3, r2
 314              		.loc 1 69 37
 315 00fa 1C4A     		ldr	r2, .L25+24
 316 00fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 317 00fe 1A70     		strb	r2, [r3]
  70:../source/demod.c **** 		demod_write_index = UPDATE_INDEX(demod_write_index, BITSTREAM_SIZE);
 318              		.loc 1 70 23
 319 0100 1D4B     		ldr	r3, .L25+36
 320 0102 1B88     		ldrh	r3, [r3]
 321              		.loc 1 70 21
 322 0104 40F2E732 		movw	r2, #999
 323 0108 9342     		cmp	r3, r2
 324 010a 04D0     		beq	.L18
 325              		.loc 1 70 23 discriminator 1
 326 010c 1A4B     		ldr	r3, .L25+36
 327 010e 1B88     		ldrh	r3, [r3]
 328              		.loc 1 70 21 discriminator 1
 329 0110 0133     		adds	r3, r3, #1
 330 0112 9BB2     		uxth	r3, r3
 331 0114 00E0     		b	.L19
 332              	.L18:
 333              		.loc 1 70 21 is_stmt 0 discriminator 2
 334 0116 0023     		movs	r3, #0
 335              	.L19:
 336              		.loc 1 70 21 discriminator 4
 337 0118 174A     		ldr	r2, .L25+36
 338 011a 1380     		strh	r3, [r2]	@ movhi
  71:../source/demod.c **** 
  72:../source/demod.c **** 		unfiltered_data_count--;
 339              		.loc 1 72 24 is_stmt 1
 340 011c 174B     		ldr	r3, .L25+40
 341 011e 1B88     		ldrh	r3, [r3]
 342 0120 013B     		subs	r3, r3, #1
 343 0122 9AB2     		uxth	r2, r3
 344 0124 154B     		ldr	r3, .L25+40
 345 0126 1A80     		strh	r2, [r3]	@ movhi
  73:../source/demod.c **** 		filtered_data=0;
 346              		.loc 1 73 16
 347 0128 4FF00003 		mov	r3, #0
 348 012c 3B60     		str	r3, [r7]	@ float
  55:../source/demod.c **** 	{
 349              		.loc 1 55 24 discriminator 2
 350 012e BB68     		ldr	r3, [r7, #8]
 351 0130 0133     		adds	r3, r3, #1
 352 0132 BB60     		str	r3, [r7, #8]
 353              	.L7:
  55:../source/demod.c **** 	{
 354              		.loc 1 55 12 discriminator 1
 355 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 356 0136 BA68     		ldr	r2, [r7, #8]
 357 0138 9A42     		cmp	r2, r3
 358 013a 85DB     		blt	.L20
  74:../source/demod.c **** 	}
  75:../source/demod.c **** 	#ifdef DEBUG_PIN
  76:../source/demod.c **** 		DEBUG_TP_CLR;
 359              		.loc 1 76 3
 360 013c 104B     		ldr	r3, .L25+44
 361 013e 4FF40002 		mov	r2, #8388608
 362 0142 1A60     		str	r2, [r3]
  77:../source/demod.c **** 		//GPIO_Clear(PTC, GPIO_OUT(12));
  78:../source/demod.c **** 	#endif
  79:../source/demod.c **** 	return num_data;
 363              		.loc 1 79 9
 364 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  80:../source/demod.c **** }
 365              		.loc 1 80 1
 366 0146 1846     		mov	r0, r3
 367 0148 1437     		adds	r7, r7, #20
 368              		.cfi_def_cfa_offset 4
 369 014a BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 014c 5DF8047B 		ldr	r7, [sp], #4
 373              		.cfi_restore 7
 374              		.cfi_def_cfa_offset 0
 375 0150 7047     		bx	lr
 376              	.L26:
 377 0152 00BF     		.align	2
 378              	.L25:
 379 0154 44F00F40 		.word	1074786372
 380 0158 00000000 		.word	write_index
 381 015c 00000000 		.word	read_index
 382 0160 00000000 		.word	inputs
 383 0164 00000000 		.word	coefs
 384 0168 CDCCCC3D 		.word	1036831949
 385 016c 00000000 		.word	current_state
 386 0170 CDCC4CBE 		.word	-1102263091
 387 0174 00000000 		.word	demod_bitstream
 388 0178 00000000 		.word	demod_write_index
 389 017c 00000000 		.word	unfiltered_data_count
 390 0180 48F00F40 		.word	1074786376
 391              		.cfi_endproc
 392              	.LFE124:
 394              		.section	.text.add_data,"ax",%progbits
 395              		.align	1
 396              		.global	add_data
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	add_data:
 402              	.LFB125:
  81:../source/demod.c **** 
  82:../source/demod.c **** void add_data(uint16_t new_data){
 403              		.loc 1 82 33
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408 0000 80B4     		push	{r7}
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 7, -4
 411 0002 83B0     		sub	sp, sp, #12
 412              		.cfi_def_cfa_offset 16
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 415 0006 0346     		mov	r3, r0
 416 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  83:../source/demod.c **** 
  84:../source/demod.c **** 	raw_inputs[write_index_raw] = (new_data-2048)*(3.3f)/4095;
 417              		.loc 1 84 41
 418 000a FB88     		ldrh	r3, [r7, #6]
 419 000c A3F50063 		sub	r3, r3, #2048
 420              		.loc 1 84 47
 421 0010 07EE903A 		vmov	s15, r3	@ int
 422 0014 F8EEE77A 		vcvt.f32.s32	s15, s15
 423 0018 9FED297A 		vldr.32	s14, .L34
 424 001c 27EE877A 		vmul.f32	s14, s15, s14
 425              		.loc 1 84 12
 426 0020 284B     		ldr	r3, .L34+4
 427 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428              		.loc 1 84 54
 429 0024 DFED286A 		vldr.32	s13, .L34+8
 430 0028 C7EE267A 		vdiv.f32	s15, s14, s13
 431              		.loc 1 84 30
 432 002c 274A     		ldr	r2, .L34+12
 433 002e 9B00     		lsls	r3, r3, #2
 434 0030 1344     		add	r3, r3, r2
 435 0032 C3ED007A 		vstr.32	s15, [r3]
  85:../source/demod.c **** 	inputs[write_index] = raw_inputs[write_index_raw] * raw_inputs[CIRCULAR_INDEX_R(write_index_raw-(M
 436              		.loc 1 85 34
 437 0036 234B     		ldr	r3, .L34+4
 438 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 439 003a 244A     		ldr	r2, .L34+12
 440 003c 9B00     		lsls	r3, r3, #2
 441 003e 1344     		add	r3, r3, r2
 442 0040 93ED007A 		vldr.32	s14, [r3]
 443              		.loc 1 85 65
 444 0044 1F4B     		ldr	r3, .L34+4
 445 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446 0048 042B     		cmp	r3, #4
 447 004a 03D8     		bhi	.L28
 448              		.loc 1 85 65 is_stmt 0 discriminator 1
 449 004c 1D4B     		ldr	r3, .L34+4
 450 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 0050 0133     		adds	r3, r3, #1
 452 0052 02E0     		b	.L29
 453              	.L28:
 454              		.loc 1 85 65 discriminator 2
 455 0054 1B4B     		ldr	r3, .L34+4
 456 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 0058 053B     		subs	r3, r3, #5
 458              	.L29:
 459              		.loc 1 85 64 is_stmt 1 discriminator 4
 460 005a 1C4A     		ldr	r2, .L34+12
 461 005c 9B00     		lsls	r3, r3, #2
 462 005e 1344     		add	r3, r3, r2
 463 0060 D3ED007A 		vldr.32	s15, [r3]
 464              		.loc 1 85 8 discriminator 4
 465 0064 1A4B     		ldr	r3, .L34+16
 466 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467              		.loc 1 85 52 discriminator 4
 468 0068 67EE277A 		vmul.f32	s15, s14, s15
 469              		.loc 1 85 22 discriminator 4
 470 006c 194A     		ldr	r2, .L34+20
 471 006e 9B00     		lsls	r3, r3, #2
 472 0070 1344     		add	r3, r3, r2
 473 0072 C3ED007A 		vstr.32	s15, [r3]
  86:../source/demod.c **** 
  87:../source/demod.c **** 	write_index_raw = UPDATE_INDEX(write_index_raw ,MULT_BUFF_SIZE);
 474              		.loc 1 87 20
 475 0076 134B     		ldr	r3, .L34+4
 476 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 477              		.loc 1 87 18
 478 007a 052B     		cmp	r3, #5
 479 007c 04D0     		beq	.L30
 480              		.loc 1 87 20 discriminator 1
 481 007e 114B     		ldr	r3, .L34+4
 482 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483              		.loc 1 87 18 discriminator 1
 484 0082 0133     		adds	r3, r3, #1
 485 0084 DBB2     		uxtb	r3, r3
 486 0086 00E0     		b	.L31
 487              	.L30:
 488              		.loc 1 87 18 is_stmt 0 discriminator 2
 489 0088 0023     		movs	r3, #0
 490              	.L31:
 491              		.loc 1 87 18 discriminator 4
 492 008a 0E4A     		ldr	r2, .L34+4
 493 008c 1370     		strb	r3, [r2]
  88:../source/demod.c **** 	write_index = UPDATE_INDEX(write_index,BUFFER_SIZE);
 494              		.loc 1 88 16 is_stmt 1
 495 008e 104B     		ldr	r3, .L34+16
 496 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497              		.loc 1 88 14
 498 0092 632B     		cmp	r3, #99
 499 0094 04D0     		beq	.L32
 500              		.loc 1 88 16 discriminator 1
 501 0096 0E4B     		ldr	r3, .L34+16
 502 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503              		.loc 1 88 14 discriminator 1
 504 009a 0133     		adds	r3, r3, #1
 505 009c DBB2     		uxtb	r3, r3
 506 009e 00E0     		b	.L33
 507              	.L32:
 508              		.loc 1 88 14 is_stmt 0 discriminator 2
 509 00a0 0023     		movs	r3, #0
 510              	.L33:
 511              		.loc 1 88 14 discriminator 4
 512 00a2 0B4A     		ldr	r2, .L34+16
 513 00a4 1370     		strb	r3, [r2]
  89:../source/demod.c **** 	unfiltered_data_count++;
 514              		.loc 1 89 23 is_stmt 1
 515 00a6 0C4B     		ldr	r3, .L34+24
 516 00a8 1B88     		ldrh	r3, [r3]
 517 00aa 0133     		adds	r3, r3, #1
 518 00ac 9AB2     		uxth	r2, r3
 519 00ae 0A4B     		ldr	r3, .L34+24
 520 00b0 1A80     		strh	r2, [r3]	@ movhi
  90:../source/demod.c **** }
 521              		.loc 1 90 1
 522 00b2 00BF     		nop
 523 00b4 0C37     		adds	r7, r7, #12
 524              		.cfi_def_cfa_offset 4
 525 00b6 BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 00b8 5DF8047B 		ldr	r7, [sp], #4
 529              		.cfi_restore 7
 530              		.cfi_def_cfa_offset 0
 531 00bc 7047     		bx	lr
 532              	.L35:
 533 00be 00BF     		.align	2
 534              	.L34:
 535 00c0 33335340 		.word	1079194419
 536 00c4 00000000 		.word	write_index_raw
 537 00c8 00F07F45 		.word	1166012416
 538 00cc 00000000 		.word	raw_inputs
 539 00d0 00000000 		.word	write_index
 540 00d4 00000000 		.word	inputs
 541 00d8 00000000 		.word	unfiltered_data_count
 542              		.cfi_endproc
 543              	.LFE125:
 545              		.section	.text.get_unfiltered_count,"ax",%progbits
 546              		.align	1
 547              		.global	get_unfiltered_count
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 552              	get_unfiltered_count:
 553              	.LFB126:
  91:../source/demod.c **** 
  92:../source/demod.c **** 
  93:../source/demod.c **** uint16_t get_unfiltered_count(void){
 554              		.loc 1 93 36
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559 0000 80B4     		push	{r7}
 560              		.cfi_def_cfa_offset 4
 561              		.cfi_offset 7, -4
 562 0002 00AF     		add	r7, sp, #0
 563              		.cfi_def_cfa_register 7
  94:../source/demod.c **** 	return unfiltered_data_count;
 564              		.loc 1 94 9
 565 0004 034B     		ldr	r3, .L38
 566 0006 1B88     		ldrh	r3, [r3]
  95:../source/demod.c **** }
 567              		.loc 1 95 1
 568 0008 1846     		mov	r0, r3
 569 000a BD46     		mov	sp, r7
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 000c 5DF8047B 		ldr	r7, [sp], #4
 573              		.cfi_restore 7
 574              		.cfi_def_cfa_offset 0
 575 0010 7047     		bx	lr
 576              	.L39:
 577 0012 00BF     		.align	2
 578              	.L38:
 579 0014 00000000 		.word	unfiltered_data_count
 580              		.cfi_endproc
 581              	.LFE126:
 583              		.text
 584              	.Letext0:
 585              		.file 2 "C:/nxp/MCUXpressoIDE_11.10.0_3148/ide/plugins/com.nxp.mcuxpresso.tools.win32_11.10.0.2023
 586              		.file 3 "../source/ADC.h"
DEFINED SYMBOLS
                            *ABS*:00000000 demod.c
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:21     .rodata.coefs:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:24     .rodata.coefs:00000000 coefs
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:44     .bss.raw_inputs:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:47     .bss.raw_inputs:00000000 raw_inputs
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:52     .bss.write_index_raw:00000000 write_index_raw
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:53     .bss.write_index_raw:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:55     .bss.inputs:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:58     .bss.inputs:00000000 inputs
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:61     .bss.demod_bitstream:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:64     .bss.demod_bitstream:00000000 demod_bitstream
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:69     .bss.write_index:00000000 write_index
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:70     .bss.write_index:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:74     .bss.read_index:00000000 read_index
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:75     .bss.read_index:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:77     .bss.demod_write_index:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:80     .bss.demod_write_index:00000000 demod_write_index
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:85     .bss.current_state:00000000 current_state
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:86     .bss.current_state:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:88     .bss.unfiltered_data_count:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:91     .bss.unfiltered_data_count:00000000 unfiltered_data_count
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:96     .bss.idle:00000000 idle
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:97     .bss.idle:00000000 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:99     .text.demod_init:00000000 $t
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:105    .text.demod_init:00000000 demod_init
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:138    .text.demod_init:0000001c $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:401    .text.add_data:00000000 add_data
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:144    .text.filter_data:00000000 $t
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:150    .text.filter_data:00000000 filter_data
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:379    .text.filter_data:00000154 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:395    .text.add_data:00000000 $t
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:535    .text.add_data:000000c0 $d
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:546    .text.get_unfiltered_count:00000000 $t
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:552    .text.get_unfiltered_count:00000000 get_unfiltered_count
C:\Users\casas\AppData\Local\Temp\ccSf8DYb.s:579    .text.get_unfiltered_count:00000014 $d
                           .group:00000000 wm4.0.1dcc4abb7b230aa9a5dadaa004994123
                           .group:00000000 wm4.redlib_version.h.25.d2e865e22c1528eeae52d7d98a50fff1
                           .group:00000000 wm4.libconfigarm.h.19.34723c94cbd19598192aa6b1e87fca41
                           .group:00000000 wm4.stdint.h.31.58198de4ea930fb897655479091e17c7
                           .group:00000000 wm4.demod.h.4.d42bffd65dfd49513ac71a79878a88ee
                           .group:00000000 wm4.stdbool.h.15.fddf1cb2402fd739d8e2516677869231
                           .group:00000000 wm4.fsl_device_registers.h.32.f10b25a7fd7ad45b9a40904c33f28816
                           .group:00000000 wm4.MK64F12.h.105.e884e5c80776532d2ec0f5c21e2ea7cb
                           .group:00000000 wm4.core_cm4.h.42.42f38327ee0970d80f60117e6a3ba2b0
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.223.7b48c9958ef5573320c4765074c8b0ce
                           .group:00000000 wm4.system_MK64F12.h.109.c6d21568e03be21b21c922eb7345d6e3
                           .group:00000000 wm4.MK64F12.h.475.9475ab1c0ace29480f556d9316131319
                           .group:00000000 wm4.MK64F12_features.h.92.512cea46d882153168efeec0bc3a9da7
                           .group:00000000 wm4.hardware.h.28.9c5eae6fa67a41a2ef974419a839913d

UNDEFINED SYMBOLS
setADCIRQ
